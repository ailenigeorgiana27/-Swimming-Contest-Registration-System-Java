plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'ro.mpp2024'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
application {
    mainClass = "ro.mpp2024.StartRpcClient"

    applicationDefaultJvmArgs = [
            "--module-path", "C:\\Users\\ioana\\Downloads\\openjfx-21.0.5_windows-x64_bin-sdk.zip\\javafx-sdk-21.0.5\\lib",
            "--add-modules", "javafx.controls,javafx.fxml,javafx.base,javafx.graphics"
    ]
}

javafx {
    version = "21.0.5"
    modules = ["javafx.controls", "javafx.fxml", "javafx.base", "javafx.graphics"]
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.openjfx:javafx-controls:20'
    implementation 'org.openjfx:javafx-fxml:20'
    implementation 'org.openjfx:javafx-base:20'
    implementation 'org.openjfx:javafx-graphics:20'
    implementation 'org.controlsfx:controlsfx:11.1.1'
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.2.0'
    implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    implementation project(':Model')
    implementation project(':Services')
    implementation project(':Network')
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'io.grpc:grpc-netty-shaded:1.64.0'
    implementation 'io.grpc:grpc-stub:1.64.0'
    implementation 'io.grpc:grpc-protobuf:1.64.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.2"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.64.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}
sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
    }
}
tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
tasks.withType(Test).configureEach {
    enabled = false
}
